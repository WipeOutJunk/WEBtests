import React, { useEffect, useRef } from "react";
import styles from "./FeaturesPage.module.css"; // –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π CSS-–º–æ–¥—É–ª—å

const featuresDetails = [
  {
    title: "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è",
    description: "–ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–∞",
    details: [
      "–•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π –ø–æ –∞–ª–≥–æ—Ä–∏—Ç–º—É bcrypt",
      "–î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ Google Authenticator",
      "–†–æ–ª–µ–≤–∞—è –º–æ–¥–µ–ª—å –¥–æ—Å—Ç—É–ø–∞ (–ê–¥–º–∏–Ω/–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å/–°—Ç—É–¥–µ–Ω—Ç)",
      "–°–µ—Å—Å–∏–æ–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å JWT-—Ç–æ–∫–µ–Ω–∞–º–∏"
    ],
    image: "/images/auth-placeholder.svg", // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏
    icon: "üîí"
  },
  {
    title: "–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Ç–µ—Å—Ç–æ–≤",
    description: "–ì–∏–±–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
    details: [
      "10+ —Ç–∏–ø–æ–≤ –≤–æ–ø—Ä–æ—Å–æ–≤ (–æ–¥–∏–Ω –≤—ã–±–æ—Ä, –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π, —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ)",
      "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π",
      "–õ–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è",
      "–®–∞–±–ª–æ–Ω—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è"
    ],
    image: "/images/builder-placeholder.svg",
    icon: "üìù"
  },
  // –î–æ–±–∞–≤—å—Ç–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏
];

const FeaturesPage: React.FC = () => {
    const sectionRefs = useRef<(HTMLDivElement | null)[]>([]);

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add(styles.visible);
          }
        });
      },
      { threshold: 0.1 }
    );

    sectionRefs.current.forEach(ref => ref && observer.observe(ref));
    
    return () => observer.disconnect();
  }, []);
  return (
    <div className={styles.layout}>
      <section className={styles.hero}>
        <div className={styles.headerContent}>
          <h1 className={styles.title}>
            <span>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</span>
            <div className={styles.animatedUnderline}></div>
          </h1>
        </div>

        <div className={styles.featuresContainer}>
          {featuresDetails.map((feature, index) => (
            <div key={feature.title} className={styles.featureSection}>
              <div className={styles.featureIllustration}>
                {/* –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏ */}
                <div className={styles.imagePlaceholder}>
                  {feature.icon}
                </div>
              </div>
              
              <div className={styles.featureContent}>
                <div className={styles.featureHeader}>
                  <h2>{feature.title}</h2>
                  <span className={styles.featureNumber}>0{index + 1}</span>
                </div>
                
                <p className={styles.featureDescription}>
                  {feature.description}
                </p>
                
                <ul className={styles.featureList}>
                  {feature.details.map((detail, i) => (
                    <li key={i} className={styles.featureListItem}>
                      <span className={styles.listMarker}>‚úì</span>
                      {detail}
                    </li>
                  ))}
                </ul>
                
                <div className={styles.featureExamples}>
                  <h4>–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:</h4>
                  <div className={styles.examplePlaceholder}></div>
                  <div className={styles.examplePlaceholder}></div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </section>
    </div>
  );
};

export default FeaturesPage;